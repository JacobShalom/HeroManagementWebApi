// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace HeroManagementWebApi.Model
{
    public partial class HeroesmanagementContext : DbContext
    {
        public HeroesmanagementContext()
        {
        }

        public HeroesmanagementContext(DbContextOptions<HeroesmanagementContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Ability> Abilities { get; set; }
        public virtual DbSet<Hero> Heroes { get; set; }
        public virtual DbSet<Trainer> Trainers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=HeroesManagement;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Ability>(entity =>
            {
                entity.ToTable("Ability");

                entity.Property(e => e.AbilityId).ValueGeneratedNever();

                entity.Property(e => e.AbilityDesc)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<Hero>(entity =>
            {
                entity.ToTable("Hero");

                entity.Property(e => e.Id).HasMaxLength(36);

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.HeroName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.TrainerId)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.HasOne(d => d.Ability)
                    .WithMany(p => p.Heroes)
                    .HasForeignKey(d => d.AbilityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_HeroToAbility");

                entity.HasOne(d => d.Trainer)
                    .WithMany(p => p.Heroes)
                    .HasForeignKey(d => d.TrainerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_HeroToTrainer");
            });

            modelBuilder.Entity<Trainer>(entity =>
            {
                entity.ToTable("Trainer");

                entity.Property(e => e.Id).HasMaxLength(36);

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.TrainerName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}